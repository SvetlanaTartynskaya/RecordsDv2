import pandas as pd
from datetime import datetime, time
import pytz
import os
import logging
from telegram import InputFile
import io

from shifts_handler import ShiftsHandler

def send_absence_notifications(context):
    handler = ShiftsHandler()
    absent_users = handler.get_absent_users()
    for user in absent_users:
        context.bot.send_message(...)

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

def get_last_readings():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–∫–∞–∑–∞–Ω–∏–π —Å—á–µ—Ç—á–∏–∫–æ–≤"""
    try:
        # –í –±—É–¥—É—â–µ–º –∑–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å 1–°
        # –ü–æ–∫–∞ —á–∏—Ç–∞–µ–º –∏–∑ Excel —Ñ–∞–π–ª–∞
        df = pd.read_excel('last_readings.xlsx')
        return df
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–∫–∞–∑–∞–Ω–∏–π: {e}")
        return pd.DataFrame()

def get_active_users(cursor):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ –≤–∞—Ö—Ç–µ"""
    try:
        cursor.execute('''
            SELECT u.tab_number, u.name, u.location, u.division, u.t_number 
            FROM Users_user_bot u
            JOIN shifts s ON u.tab_number = s.tab_number
            WHERE s.is_on_shift = "–î–ê"
        ''')
        return cursor.fetchall()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π: {e}")
        return []

def create_user_excel(equipment_data, user_info):
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã Excel –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    try:
        df = pd.DataFrame(columns=[
            '‚Ññ –ø/–ø', '–ì–æ—Å. –Ω–æ–º–µ—Ä', '–ò–Ω–≤. ‚Ññ', '–°—á—ë—Ç—á–∏–∫', 
            '–ü–æ–∫–∞–∑–∞–Ω–∏—è', '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π'
        ])
        
        # –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –æ–±–æ—Ä—É–¥–æ–≤–∞–Ω–∏—è –ø–æ –ª–æ–∫–∞—Ü–∏–∏ –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—é
        user_equipment = equipment_data[
            (equipment_data['–õ–æ–∫–∞—Ü–∏—è'] == user_info['location']) & 
            (equipment_data['–ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ'] == user_info['division'])
        ]
        
        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ —Ç–∞–±–ª–∏—Ü—ã
        for idx, row in user_equipment.iterrows():
            df.loc[len(df)] = {
                '‚Ññ –ø/–ø': len(df) + 1,
                '–ì–æ—Å. –Ω–æ–º–µ—Ä': row['–ì–æ—Å. –Ω–æ–º–µ—Ä'],
                '–ò–Ω–≤. ‚Ññ': row['–ò–Ω–≤. ‚Ññ'],
                '–°—á—ë—Ç—á–∏–∫': row['–°—á—ë—Ç—á–∏–∫'],
                '–ü–æ–∫–∞–∑–∞–Ω–∏—è': row['–ü–æ—Å–ª–µ–¥–Ω–∏–µ –ø–æ–∫–∞–∑–∞–Ω–∏—è'],
                '–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π': ''
            }
        
        # –°–æ–∑–¥–∞–Ω–∏–µ –±—É—Ñ–µ—Ä–∞ –¥–ª—è —Ñ–∞–π–ª–∞ Excel
        excel_buffer = io.BytesIO()
        df.to_excel(excel_buffer, index=False)
        excel_buffer.seek(0)
        
        return excel_buffer
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ Excel —Ñ–∞–π–ª–∞: {e}")
        return None

def weekly_data_preparation(context):
    """–ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –∏ —Ä–∞—Å—Å—ã–ª–∫–∞ —Ç–∞–±–ª–∏—Ü –ø–æ —Å—Ä–µ–¥–∞–º"""
    try:
        # –ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –ø–æ–∫–∞–∑–∞–Ω–∏–π
        equipment_data = get_last_readings()
        if equipment_data.empty:
            logger.error("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–∫–∞–∑–∞–Ω–∏—è—Ö")
            return
        
        # –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        conn = context.bot_data.get('db_connection')
        if not conn:
            logger.error("–ù–µ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
            return
            
        cursor = conn.cursor()
        active_users = get_active_users(cursor)
        
        # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ç–∞–±–ª–∏—Ü
        for user in active_users:
            tab_number, name, location, division, t_number = user
            
            user_info = {
                'tab_number': tab_number,
                'name': name,
                'location': location,
                'division': division,
                't_number': t_number
            }
            
            # –°–æ–∑–¥–∞–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω–æ–π —Ç–∞–±–ª–∏—Ü—ã
            excel_file = create_user_excel(equipment_data, user_info)
            if not excel_file:
                continue
            
            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
            message = (
                f"üîî –£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {name}!\n\n"
                f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º –æ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –ø–æ–¥–∞—Ç—å –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤ "
                f"–¥–æ –ø—è—Ç–Ω–∏—Ü—ã 14:00 –ú–°–ö.\n\n"
                f"üìç –õ–æ–∫–∞—Ü–∏—è: {location}\n"
                f"üè¢ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: {division}\n\n"
                f"–ö —Å–æ–æ–±—â–µ–Ω–∏—é –ø—Ä–∏–∫—Ä–µ–ø–ª–µ–Ω–∞ —Ç–∞–±–ª–∏—Ü–∞ –¥–ª—è –∑–∞–ø–æ–ª–Ω–µ–Ω–∏—è.\n"
                f"–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ —Å—Ç–æ–ª–±–µ—Ü '–ü–æ–∫–∞–∑–∞–Ω–∏—è' –∏ –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏ "
                f"–¥–æ–±–∞–≤—å—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏ –∏–∑ —Å–ø–∏—Å–∫–∞:\n"
                f"- –ù–µ–∏—Å–ø—Ä–∞–≤–µ–Ω\n"
                f"- –í —Ä–µ–º–æ–Ω—Ç–µ\n"
                f"- –£–±—ã–ª–æ"
            )
            
            # –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∏ —Ñ–∞–π–ª–∞
            context.bot.send_message(
                chat_id=t_number,
                text=message
            )
            
            context.bot.send_document(
                chat_id=t_number,
                document=InputFile(
                    excel_file,
                    filename=f'readings_{location}_{division}_{datetime.now().strftime("%Y%m%d")}.xlsx'
                )
            )
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–∏
            if 'reminders' not in context.bot_data:
                context.bot_data['reminders'] = {}
            context.bot_data['reminders'][tab_number] = {
                'name': name,
                'location': location,
                'division': division,
                't_number': t_number,
                'status': 'sent'
            }
            
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ weekly_data_preparation: {e}")

def check_missing_reports(context):
    """–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ–ø–æ–¥–∞–Ω–Ω—ã—Ö –ø–æ–∫–∞–∑–∞–Ω–∏–π –≤ –ø—è—Ç–Ω–∏—Ü—É 14:00"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
        reminders = context.bot_data.get('reminders', {})
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–∞–ø–∫—É —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –æ—Ç—á–µ—Ç–∞–º–∏
        current_week = datetime.now().strftime('%Y-W%U')
        reports_folder = f'meter_readings/week_{current_week}'
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ —Å –æ—Ç—á–µ—Ç–∞–º–∏
        submitted_reports = set()
        if os.path.exists(reports_folder):
            for filename in os.listdir(reports_folder):
                # –ò–∑–≤–ª–µ–∫–∞–µ–º —Ç–∞–±–µ–ª—å–Ω—ã–π –Ω–æ–º–µ—Ä –∏–∑ –∏–º–µ–Ω–∏ —Ñ–∞–π–ª–∞
                parts = filename.split('_')
                if len(parts) >= 4:
                    tab_number = parts[3].split('.')[0]
                    submitted_reports.add(int(tab_number))
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –∫—Ç–æ –Ω–µ –ø–æ–¥–∞–ª –æ—Ç—á–µ—Ç—ã
        for tab_number, user_info in reminders.items():
            if int(tab_number) not in submitted_reports:
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–≤—Ç–æ—Ä–Ω–æ–µ –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ
                message = (
                    f"‚ö†Ô∏è –£–≤–∞–∂–∞–µ–º—ã–π(–∞—è) {user_info['name']}!\n\n"
                    f"–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Å–µ–≥–æ–¥–Ω—è –¥–æ 14:00 –ú–°–ö –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –ø–æ–¥–∞—Ç—å "
                    f"–ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤.\n\n"
                    f"üìç –õ–æ–∫–∞—Ü–∏—è: {user_info['location']}\n"
                    f"üè¢ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: {user_info['division']}\n\n"
                    f"–ï—Å–ª–∏ –≤—ã —É–∂–µ –æ—Ç–ø—Ä–∞–≤–∏–ª–∏ –ø–æ–∫–∞–∑–∞–Ω–∏—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–∏–≥–Ω–æ—Ä–∏—Ä—É–π—Ç–µ "
                    f"—ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ."
                )
                
                context.bot.send_message(
                    chat_id=user_info['t_number'],
                    text=message
                )
                
                # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è
                reminders[tab_number]['status'] = 'reminded'
        
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        context.bot_data['reminders'] = reminders
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ check_missing_reports: {e}")

def notify_administrators(context):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤ –≤ –ø—è—Ç–Ω–∏—Ü—É 15:00"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã—Ö –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–π
        reminders = context.bot_data.get('reminders', {})
        
        # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â—É—é –Ω–µ–¥–µ–ª—é
        current_week = datetime.now().strftime('%Y-W%U')
        reports_folder = f'meter_readings/week_{current_week}'
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –ø–æ–¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–æ–≤
        submitted_reports = set()
        if os.path.exists(reports_folder):
            for filename in os.listdir(reports_folder):
                parts = filename.split('_')
                if len(parts) >= 4:
                    tab_number = parts[3].split('.')[0]
                    submitted_reports.add(int(tab_number))
        
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –Ω–µ–ø–æ–¥–∞–Ω–Ω—ã–µ –æ—Ç—á–µ—Ç—ã –ø–æ –ª–æ–∫–∞—Ü–∏—è–º –∏ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è–º
        missing_reports = {}
        for tab_number, user_info in reminders.items():
            if int(tab_number) not in submitted_reports:
                key = (user_info['location'], user_info['division'])
                if key not in missing_reports:
                    missing_reports[key] = []
                missing_reports[key].append(user_info)
        
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        conn = context.bot_data.get('db_connection')
        cursor = conn.cursor()
        
        # –£–≤–µ–¥–æ–º–ª—è–µ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        for (location, division), users in missing_reports.items():
            # –ù–∞—Ö–æ–¥–∏–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
            cursor.execute('''
                SELECT tab_number, name, t_number 
                FROM Users_admin_bot 
                WHERE location = ? AND division = ?
            ''', (location, division))
            admin = cursor.fetchone()
            
            if admin:
                admin_tab, admin_name, admin_number = admin
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                message = (
                    f"üö® –í–Ω–∏–º–∞–Ω–∏–µ, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {admin_name}!\n\n"
                    f"–û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ–∫–∞–∑–∞–Ω–∏—è —Å—á–µ—Ç—á–∏–∫–æ–≤:\n"
                    f"üìç –õ–æ–∫–∞—Ü–∏—è: {location}\n"
                    f"üè¢ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: {division}\n\n"
                    f"–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ:\n"
                )
                
                for user in users:
                    message += f"- {user['name']}\n"
                
                message += "\n–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ."
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                context.bot.send_message(
                    chat_id=admin_number,
                    text=message
                )
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ–± —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–∏ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
                if 'admin_notifications' not in context.bot_data:
                    context.bot_data['admin_notifications'] = {}
                
                context.bot_data['admin_notifications'][(location, division)] = {
                    'admin_tab': admin_tab,
                    'admin_name': admin_name,
                    'users': users,
                    'timestamp': datetime.now().timestamp()
                }
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ notify_administrators: {e}")

def notify_managers(context):
    """–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–µ–π –≤ –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ 08:00"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –Ω–µ–ø–æ–¥–∞–Ω–Ω—ã—Ö –æ—Ç—á–µ—Ç–∞—Ö –∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è—Ö –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        admin_notifications = context.bot_data.get('admin_notifications', {})
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –∫–∞–∫–∏–µ-—Ç–æ –¥–µ–π—Å—Ç–≤–∏—è –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        conn = context.bot_data.get('db_connection')
        cursor = conn.cursor()
        
        for (location, division), notification in admin_notifications.items():
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à–ª–æ –ª–∏ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –≤—Ä–µ–º–µ–Ω–∏
            time_passed = datetime.now().timestamp() - notification['timestamp']
            if time_passed < 60 * 60 * 24 * 2:  # 2 –¥–Ω—è
                continue
            
            # –ù–∞—Ö–æ–¥–∏–º –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—è
            cursor.execute('''
                SELECT tab_number, name, t_number 
                FROM Users_dir_bot 
                WHERE location = ? AND division = ?
            ''', (location, division))
            manager = cursor.fetchone()
            
            if manager:
                manager_tab, manager_name, manager_number = manager
                
                # –§–æ—Ä–º–∏—Ä—É–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
                message = (
                    f"üö® –í–Ω–∏–º–∞–Ω–∏–µ, —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª—å {manager_name}!\n\n"
                    f"–¢—Ä–µ–±—É–µ—Ç—Å—è –≤–∞—à–µ –≤–º–µ—à–∞—Ç–µ–ª—å—Å—Ç–≤–æ:\n"
                    f"üìç –õ–æ–∫–∞—Ü–∏—è: {location}\n"
                    f"üè¢ –ü–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏–µ: {division}\n\n"
                    f"–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä {notification['admin_name']} –Ω–µ –ø—Ä–µ–¥–ø—Ä–∏–Ω—è–ª "
                    f"–Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π –ø–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—â–∏–º –ø–æ–∫–∞–∑–∞–Ω–∏—è–º.\n\n"
                    f"–ù–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–∏–ª–∏ –¥–∞–Ω–Ω—ã–µ:\n"
                )
                
                for user in notification['users']:
                    message += f"- {user['name']}\n"
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ
                context.bot.send_message(
                    chat_id=manager_number,
                    text=message
                )
        
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –≤ notify_managers: {e}")

def get_users_info(self):
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö"""
    try:
        self.cursor.execute('''
            SELECT u.tab_number, u.name, u.location, u.division
            FROM Users_user_bot u
        ''')
        return self.cursor.fetchall()
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è—Ö: {e}")
        return []

def notify_users(self, message, users=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º"""
    try:
        if users is None:
            users = self.get_users_info()
        
        for user in users:
            tab_number, name, location, division = user
            user_info = {
                'tab_number': tab_number,
                'name': name,
                'location': location,
                'division': division
            }
            
            try:
                self.bot.send_message(
                    chat_id=tab_number,  # –ò—Å–ø–æ–ª—å–∑—É–µ–º tab_number –∫–∞–∫ chat_id
                    text=message,
                    parse_mode='Markdown'
                )
                logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {name}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {name}: {e}")
                
                try:
                    self.bot.send_message(
                        chat_id=tab_number,
                        text="‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º.",
                        parse_mode='Markdown'
                    )
                except:
                    pass
                    
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –º–∞—Å—Å–æ–≤–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {e}")
        return False

def notify_admins(self, message, user_info=None):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º"""
    try:
        # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–≤
        self.cursor.execute('''
            SELECT tab_number, name
            FROM Users_admin_bot
        ''')
        admins = self.cursor.fetchall()
        
        for admin in admins:
            try:
                self.bot.send_message(
                    chat_id=admin[0],  # –ò—Å–ø–æ–ª—å–∑—É–µ–º tab_number –∫–∞–∫ chat_id
                    text=message,
                    parse_mode='Markdown'
                )
                logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin[1]}")
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É {admin[1]}: {e}")
        
        return True
    except Exception as e:
        logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º: {e}")
        return False